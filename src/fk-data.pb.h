/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Wed Jan 17 15:50:47 2018. */

#ifndef PB_FK_DATA_FK_DATA_PB_H_INCLUDED
#define PB_FK_DATA_FK_DATA_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _fk_data_DeviceLocation {
    uint32_t fix;
    uint64_t time;
    float longitude;
    float latitude;
    float altitude;
/* @@protoc_insertion_point(struct:fk_data_DeviceLocation) */
} fk_data_DeviceLocation;

typedef struct _fk_data_SensorReading {
    uint64_t time;
    uint32_t sensor;
    float value;
/* @@protoc_insertion_point(struct:fk_data_SensorReading) */
} fk_data_SensorReading;

typedef struct _fk_data_LoggedReading {
    uint32_t version;
    fk_data_DeviceLocation location;
    fk_data_SensorReading reading;
/* @@protoc_insertion_point(struct:fk_data_LoggedReading) */
} fk_data_LoggedReading;

typedef struct _fk_data_DataRecord {
    fk_data_LoggedReading loggedReading;
/* @@protoc_insertion_point(struct:fk_data_DataRecord) */
} fk_data_DataRecord;

/* Default values for struct fields */

/* Initializer values for message structs */
#define fk_data_DeviceLocation_init_default      {0, 0, 0, 0, 0}
#define fk_data_SensorReading_init_default       {0, 0, 0}
#define fk_data_LoggedReading_init_default       {0, fk_data_DeviceLocation_init_default, fk_data_SensorReading_init_default}
#define fk_data_DataRecord_init_default          {fk_data_LoggedReading_init_default}
#define fk_data_DeviceLocation_init_zero         {0, 0, 0, 0, 0}
#define fk_data_SensorReading_init_zero          {0, 0, 0}
#define fk_data_LoggedReading_init_zero          {0, fk_data_DeviceLocation_init_zero, fk_data_SensorReading_init_zero}
#define fk_data_DataRecord_init_zero             {fk_data_LoggedReading_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define fk_data_DeviceLocation_fix_tag           1
#define fk_data_DeviceLocation_time_tag          2
#define fk_data_DeviceLocation_longitude_tag     3
#define fk_data_DeviceLocation_latitude_tag      4
#define fk_data_DeviceLocation_altitude_tag      5
#define fk_data_SensorReading_time_tag           1
#define fk_data_SensorReading_sensor_tag         2
#define fk_data_SensorReading_value_tag          3
#define fk_data_LoggedReading_version_tag        1
#define fk_data_LoggedReading_location_tag       2
#define fk_data_LoggedReading_reading_tag        3
#define fk_data_DataRecord_loggedReading_tag     1

/* Struct field encoding specification for nanopb */
extern const pb_field_t fk_data_DeviceLocation_fields[6];
extern const pb_field_t fk_data_SensorReading_fields[4];
extern const pb_field_t fk_data_LoggedReading_fields[4];
extern const pb_field_t fk_data_DataRecord_fields[2];

/* Maximum encoded size of messages (where known) */
#define fk_data_DeviceLocation_size              32
#define fk_data_SensorReading_size               22
#define fk_data_LoggedReading_size               64
#define fk_data_DataRecord_size                  66

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FK_DATA_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
