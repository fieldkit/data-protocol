// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fk-data.proto

/*
Package fk_data is a generated protocol buffer package.

It is generated from these files:
	fk-data.proto

It has these top-level messages:
	DeviceLocation
	SensorReading
	LoggedReading
	ModuleInfo
	SensorInfo
	Metadata
	DataRecord
*/
package fk_data

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeviceLocation struct {
	Fix       uint32  `protobuf:"varint,1,opt,name=fix" json:"fix,omitempty"`
	Time      uint64  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Longitude float32 `protobuf:"fixed32,3,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  float32 `protobuf:"fixed32,4,opt,name=latitude" json:"latitude,omitempty"`
	Altitude  float32 `protobuf:"fixed32,5,opt,name=altitude" json:"altitude,omitempty"`
}

func (m *DeviceLocation) Reset()                    { *m = DeviceLocation{} }
func (m *DeviceLocation) String() string            { return proto.CompactTextString(m) }
func (*DeviceLocation) ProtoMessage()               {}
func (*DeviceLocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DeviceLocation) GetFix() uint32 {
	if m != nil {
		return m.Fix
	}
	return 0
}

func (m *DeviceLocation) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *DeviceLocation) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *DeviceLocation) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *DeviceLocation) GetAltitude() float32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

type SensorReading struct {
	Reading uint32  `protobuf:"varint,1,opt,name=reading" json:"reading,omitempty"`
	Time    uint64  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Sensor  uint32  `protobuf:"varint,3,opt,name=sensor" json:"sensor,omitempty"`
	Value   float32 `protobuf:"fixed32,4,opt,name=value" json:"value,omitempty"`
}

func (m *SensorReading) Reset()                    { *m = SensorReading{} }
func (m *SensorReading) String() string            { return proto.CompactTextString(m) }
func (*SensorReading) ProtoMessage()               {}
func (*SensorReading) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SensorReading) GetReading() uint32 {
	if m != nil {
		return m.Reading
	}
	return 0
}

func (m *SensorReading) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SensorReading) GetSensor() uint32 {
	if m != nil {
		return m.Sensor
	}
	return 0
}

func (m *SensorReading) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type LoggedReading struct {
	Version  uint32          `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Location *DeviceLocation `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	Reading  *SensorReading  `protobuf:"bytes,3,opt,name=reading" json:"reading,omitempty"`
}

func (m *LoggedReading) Reset()                    { *m = LoggedReading{} }
func (m *LoggedReading) String() string            { return proto.CompactTextString(m) }
func (*LoggedReading) ProtoMessage()               {}
func (*LoggedReading) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoggedReading) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *LoggedReading) GetLocation() *DeviceLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *LoggedReading) GetReading() *SensorReading {
	if m != nil {
		return m.Reading
	}
	return nil
}

type ModuleInfo struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address" json:"address,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *ModuleInfo) Reset()                    { *m = ModuleInfo{} }
func (m *ModuleInfo) String() string            { return proto.CompactTextString(m) }
func (*ModuleInfo) ProtoMessage()               {}
func (*ModuleInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ModuleInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ModuleInfo) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *ModuleInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SensorInfo struct {
	Sensor        uint32 `protobuf:"varint,1,opt,name=sensor" json:"sensor,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	UnitOfMeasure string `protobuf:"bytes,3,opt,name=unitOfMeasure" json:"unitOfMeasure,omitempty"`
}

func (m *SensorInfo) Reset()                    { *m = SensorInfo{} }
func (m *SensorInfo) String() string            { return proto.CompactTextString(m) }
func (*SensorInfo) ProtoMessage()               {}
func (*SensorInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SensorInfo) GetSensor() uint32 {
	if m != nil {
		return m.Sensor
	}
	return 0
}

func (m *SensorInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SensorInfo) GetUnitOfMeasure() string {
	if m != nil {
		return m.UnitOfMeasure
	}
	return ""
}

type Metadata struct {
	DeviceId   []byte        `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Time       uint64        `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Git        string        `protobuf:"bytes,3,opt,name=git" json:"git,omitempty"`
	ResetCause uint32        `protobuf:"varint,4,opt,name=resetCause" json:"resetCause,omitempty"`
	Sensors    []*SensorInfo `protobuf:"bytes,5,rep,name=sensors" json:"sensors,omitempty"`
	Modules    []*ModuleInfo `protobuf:"bytes,6,rep,name=modules" json:"modules,omitempty"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Metadata) GetDeviceId() []byte {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *Metadata) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Metadata) GetGit() string {
	if m != nil {
		return m.Git
	}
	return ""
}

func (m *Metadata) GetResetCause() uint32 {
	if m != nil {
		return m.ResetCause
	}
	return 0
}

func (m *Metadata) GetSensors() []*SensorInfo {
	if m != nil {
		return m.Sensors
	}
	return nil
}

func (m *Metadata) GetModules() []*ModuleInfo {
	if m != nil {
		return m.Modules
	}
	return nil
}

type DataRecord struct {
	LoggedReading *LoggedReading `protobuf:"bytes,1,opt,name=loggedReading" json:"loggedReading,omitempty"`
	Metadata      *Metadata      `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
}

func (m *DataRecord) Reset()                    { *m = DataRecord{} }
func (m *DataRecord) String() string            { return proto.CompactTextString(m) }
func (*DataRecord) ProtoMessage()               {}
func (*DataRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DataRecord) GetLoggedReading() *LoggedReading {
	if m != nil {
		return m.LoggedReading
	}
	return nil
}

func (m *DataRecord) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterType((*DeviceLocation)(nil), "fk_data.DeviceLocation")
	proto.RegisterType((*SensorReading)(nil), "fk_data.SensorReading")
	proto.RegisterType((*LoggedReading)(nil), "fk_data.LoggedReading")
	proto.RegisterType((*ModuleInfo)(nil), "fk_data.ModuleInfo")
	proto.RegisterType((*SensorInfo)(nil), "fk_data.SensorInfo")
	proto.RegisterType((*Metadata)(nil), "fk_data.Metadata")
	proto.RegisterType((*DataRecord)(nil), "fk_data.DataRecord")
}

func init() { proto.RegisterFile("fk-data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x55, 0x92, 0xfd, 0xea, 0x14, 0x57, 0x65, 0x40, 0x25, 0x42, 0x08, 0xad, 0x22, 0x0e, 0x7b,
	0xd9, 0x15, 0x6a, 0xaf, 0xdc, 0xe8, 0xa5, 0xa8, 0x2b, 0x24, 0x73, 0x07, 0x99, 0xb5, 0x13, 0x59,
	0x9b, 0x8d, 0x51, 0xec, 0xac, 0xe0, 0x3f, 0x70, 0xe0, 0x77, 0xf1, 0xab, 0x2a, 0x7f, 0x25, 0x9b,
	0x6a, 0x6f, 0xf3, 0x3c, 0x6f, 0x3c, 0x6f, 0xde, 0xd8, 0x40, 0xca, 0xfd, 0x9a, 0x33, 0xc3, 0x36,
	0xbf, 0x5a, 0x65, 0x14, 0xce, 0xcb, 0xfd, 0x0f, 0x0b, 0x8b, 0xbf, 0x09, 0x5c, 0xdd, 0x8b, 0xa3,
	0xdc, 0x89, 0x47, 0xb5, 0x63, 0x46, 0xaa, 0x06, 0xaf, 0x21, 0x2b, 0xe5, 0xef, 0x3c, 0x59, 0x26,
	0x2b, 0x42, 0x6d, 0x88, 0x08, 0x13, 0x23, 0x0f, 0x22, 0x4f, 0x97, 0xc9, 0x6a, 0x42, 0x5d, 0x8c,
	0xef, 0xe0, 0xa2, 0x56, 0x4d, 0x25, 0x4d, 0xc7, 0x45, 0x9e, 0x2d, 0x93, 0x55, 0x4a, 0x87, 0x03,
	0x7c, 0x0b, 0x8b, 0x9a, 0x19, 0x9f, 0x9c, 0xb8, 0x64, 0x8f, 0x6d, 0x8e, 0xd5, 0x21, 0x37, 0xf5,
	0xb9, 0x88, 0x8b, 0x3d, 0x90, 0x6f, 0xa2, 0xd1, 0xaa, 0xa5, 0x82, 0x71, 0xd9, 0x54, 0x98, 0xc3,
	0xbc, 0xf5, 0x61, 0x10, 0x14, 0xe1, 0x59, 0x51, 0x37, 0x30, 0xd3, 0xae, 0xdc, 0x29, 0x22, 0x34,
	0x20, 0x7c, 0x0d, 0xd3, 0x23, 0xab, 0xbb, 0xa8, 0xc5, 0x83, 0xe2, 0x5f, 0x02, 0xe4, 0x51, 0x55,
	0x95, 0xe0, 0x27, 0xdd, 0x8e, 0xa2, 0xd5, 0x52, 0x35, 0xb1, 0x5b, 0x80, 0x78, 0x07, 0x8b, 0x3a,
	0x18, 0xe4, 0x3a, 0x5e, 0xde, 0xbe, 0xd9, 0x04, 0x0f, 0x37, 0x63, 0xff, 0x68, 0x4f, 0xc4, 0x8f,
	0x83, 0xf8, 0xcc, 0xd5, 0xdc, 0xf4, 0x35, 0xa3, 0x29, 0xfb, 0xa1, 0x8a, 0x2f, 0x00, 0x5b, 0xc5,
	0xbb, 0x5a, 0x3c, 0x34, 0xa5, 0xc2, 0x2b, 0x48, 0x25, 0x0f, 0x4a, 0x52, 0xc9, 0xad, 0x3c, 0xc6,
	0x79, 0x2b, 0xb4, 0x76, 0x1a, 0x08, 0x8d, 0xd0, 0x9a, 0xd1, 0xb0, 0x83, 0x5f, 0xc4, 0x05, 0x75,
	0x71, 0xf1, 0x1d, 0xc0, 0x77, 0x71, 0x77, 0x0d, 0xd6, 0x24, 0x23, 0x6b, 0x62, 0x65, 0x3a, 0x54,
	0xe2, 0x07, 0x20, 0x5d, 0x23, 0xcd, 0xd7, 0x72, 0x2b, 0x98, 0xee, 0xda, 0x78, 0xed, 0xf8, 0xb0,
	0xf8, 0x9f, 0xc0, 0x62, 0x2b, 0x0c, 0xb3, 0xf3, 0xd8, 0xa5, 0x72, 0x67, 0xc3, 0x83, 0x17, 0xfc,
	0x82, 0xf6, 0xf8, 0xec, 0xa6, 0xae, 0x21, 0xab, 0xa4, 0x09, 0x17, 0xdb, 0x10, 0xdf, 0x03, 0xb4,
	0x42, 0x0b, 0xf3, 0x99, 0x75, 0xda, 0x2f, 0x8a, 0xd0, 0x93, 0x13, 0x5c, 0xc3, 0xdc, 0x4b, 0xd6,
	0xf9, 0x74, 0x99, 0xad, 0x2e, 0x6f, 0x5f, 0x3d, 0x33, 0xd3, 0x8e, 0x49, 0x23, 0xc7, 0xd2, 0x0f,
	0xce, 0x49, 0x9d, 0xcf, 0x9e, 0xd1, 0x07, 0x87, 0x69, 0xe4, 0x14, 0x7f, 0x00, 0xee, 0x99, 0x61,
	0x54, 0xec, 0x54, 0xcb, 0xf1, 0x13, 0x90, 0xfa, 0xf4, 0x61, 0xb8, 0x91, 0x4e, 0xd7, 0x37, 0x7a,
	0x36, 0x74, 0x4c, 0xc6, 0x35, 0x2c, 0x0e, 0xc1, 0x97, 0xf0, 0x56, 0x5e, 0x0e, 0xbd, 0x43, 0x82,
	0xf6, 0x94, 0x9f, 0x33, 0xf7, 0x25, 0xef, 0x9e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x1d, 0xce,
	0x12, 0xa3, 0x03, 0x00, 0x00,
}
